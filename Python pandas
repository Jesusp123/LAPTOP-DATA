def()-class
create recurring code that can  be used multiple times
##Methods
.split-splits up string
"".join-joins string with chosen symbol
.svvapcase-svvaps upper and lovver cases
.compare-compares two sets, list,series
can add arthemic equation to a print statement results in a boolean result
head()-takes the top of the data frame

Add Pandas- import pandas as pd
Add DataFrame-import dataframe as df
EX.data = [['tom', 10], ['nick', 15], ['juli', 14]]
add column to dataframe-db['Name']=
List Use ()
Series and data frames use []
Series is used to create a one-dimensional array
index=label

#Uppercase and lowercase
make string uppercase or lowercase with pandas
up=s.upper()
lovv=s.lower

#get rid of whitespace
up=st.replace(" ","")


##INDEXING
DISPLAY DEFAULT INDEX-set_index()

Create series-pd.Series([List])
return the first value of a Pandas Series-Series[0]
insert the correct syntax to add the labels "x", "y", and "z"-pd.Series(mylist, 
index = ["x", "y", "z"])
Insert the correct syntax to return the first row of a DataFrame-
df.loc[0]
Insert the correct syntax for loading CSV files into a DataFrame-
df.read_csv("file")
Insert the correct syntax to return the entire DataFrame-
df.to_string()

#lambda and similar functions
List()-creates list
map()-returns results that match criteria
A lambda function is a small anonymous function.
A lambda function can take any number of arguments, but can only have one expression
ex. x = lambda a : a + 10
print(x(5))
ex= df['countc']= list(map(lambda x: x.count('i'),df['Color']))
