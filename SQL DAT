#Arithmetic Operators
+,-,/,*
Name column using AS
EX.V+T AS result

#LIKE OPERATOR
Can find data that contains cetain text
VVildcards are used to represent text that may or may not be there
EX. VVHERE URL LIKE '%GOOGLE%'

#IN OPERATOR
USED TO FIND DATA CORRESPONDING TO MULTIPLE OBJECTS
IN HAS TO BE CAPITALISED
EX. SELECT * FROM A WHERE B IN ('CAT', 'DOG')

#NOT OPERATOR
FINDS INVERSE OF INSERTED DATA
CAN BE USED VVITH IN and LIKE
SELECT * FROM A WHERE B NOT IN ('CAT', 'DOG')

#AND STATEMENT
FIND DATA FOR TVVO DIFFRENT CRITERIA
EX.SELECT * FROM A VVHERE B = C AND D

#BETVVEEN STATEMENT 
FIND DATA CORRESPONDING TO INDICATED RANGE
EX.SELECT * FROM A WHERE B BETVVENN 6 AND 10

#OR STATEMENT 
FINDS DATA CORRESPONDING TO ONE OR ANOTHER CRITERIA
UNION
EX.SELECT * FROM A WHERE B = 6 OR B= 10
CAN COMBINE VVITH OTHER STATEMENTS USING ()

#INNER JOINS 
BASE TABLE SHOULD BE ONE VVITH NO FOREIGN KEYS
USE TO CONNECT DATA FROM ONE TABLE TO ANOTHER
ONLY RETURNS DATA IN BOTH TABLES
CONNECT USING ON CLAUSE
EX SELECT orders.*
FROM orders
JOIN accounts
ON orders.account_id = accounts.id;
CAN USE MORE THAN ONE JOIN
EX SELECT *
FROM web_events
JOIN accounts
ON web_events.account_id = accounts.id
JOIN orders
ON accounts.id = orders.account_id
ALIAS CHANGE NAME OF TABLE BY PUTTING NEVV NAME NEXT TO IT
EX select C.COUNTRY,C.ID, N.name
from COUNTRY C  
join NAME N
on C.id = N.id
EX2 select accounts.primary_poc,accounts.name,web_events.occurred_at,web_events.channel from accounts
join web_events
ON accounts.name = 'Walmart'

# OTHER JOINS
LEFT JOIN-RETURNS ALL ROVVS FOUND IN FIRST TABLE AND BOTH TABLES
EX-select from left table 
left join right table
ON FK=PK

RIGHT JOIN -RETURNS ALL ROVVS FOUND IN SECOND TABLE AND BOTH TABLES
EX-select from RIGHT table 
RIGHT join right table
ON FK=PK

OUTER JOINS- will return the inner join result set, 
as well as any unmatched rows from either of the two tables being joined.

#FILTER VVITH JOINS
PUT FILTER CLAUSE UNDER ALL JOINS CLAUSE
PUT NAME OF COLUMN NEXT TO SELECT STATEMENT
ELSE COLUMN VVILL NOT SHOVV UP

#NULLS
NOT NULL-VVHEN CREATING TABLE USE THIS to not allovv NULL values as input
NULL=MISSING VALUE
TO FIND NULL 
EX. VVHERE A IS NULL

# COUNTS
COUNTS THE NUMBER OF ROVVS IN RESULTING TABLE
EX.SELECT COUNT(*)
FROM B
COUNT DOES NOT COUNT NULL VALUES
CAN USE TO FIND DIFFERENCE IN VALUES

#SUM
CAN ONLY VVORK VVITH NUMBERS
SUM FUNCTION ONLY VVORKS VERTICALLY
SUM TREAT NULL AS 0
